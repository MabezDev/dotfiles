[global]
    font = IBM Plex Mono 10
    allow_markup = yes
    format = "<b>%s</b>\n%b\n%p"
    sort = yes
    indicate_hidden = yes
    alignment = left
    bounce_freq = 0
    show_age_threshold = 60
    word_wrap = yes
    ignore_newline = no
    geometry = "300x10-10+48"
    ##transparency = 25
    transparency = 0
    idle_threshold = 120
    monitor = 0
    follow = mouse
    sticky_history = yes
    line_height = 5
    separator_height = 0
    padding = 10
    horizontal_padding = 10
    separator_color = #bfbfbf
    startup_notification = true
    show_indicators = no
    dmenu = /usr/bin/rofi -dmenu -p dunst
    browser = /usr/bin/google-chrome -new-tab
    max_icon_size = 32
    icon_position = left
    icon_folders = /usr/share/icons/Adwaita/32x32/status:/usr/share/icons/Adwaita/32x32/devices

    # Defines list of actions for each mouse event
    # Possible values are:
    # * none: Don't do anything.
    # * do_action: If the notification has exactly one action, or one is marked as default,
    #              invoke it. If there are multiple and no default, open the context menu.
    # * close_current: Close current notification.
    # * close_all: Close all notifications.
    # These values can be strung together for each mouse event, and
    # will be executed in sequence.
    mouse_left_click = do_action, close_current
    mouse_middle_click = do_action, close_current
    mouse_right_click = close_all
    

[frame]
    width = 2
    color = "{color4}"

[shortcuts]
    # shortcuts are specified as [modifier+][modifier+]...key
    # available modifiers are 'ctrl', 'mod1' (the alt-key), 'mod2', 'mod3'
    # and 'mod4' (windows-key)
    # xev might be helpful to find names for keys

    # close notification
    close = mod4+m

    # close all notifications
    close_all = mod4+shift+m

    # redisplay last message(s)
    history = mod4+n

    # context menu
    context = mod4+shift+i


# Set the background and foreground (text) color for all notifications
[urgency_low]
    background = "{background}"
    foreground = "{foreground}"

[urgency_normal]
    background = "{background}"
    foreground = "{foreground}"

[urgency_critical]
    background = "{background}"
    foreground = "{foreground}"

# Every section that isn't one of the above is interpreted as a rules
# to override settings for certain messages.
# Messages can be matched by 'appname', 'summary', 'body' or 'icon'
# and you can override the 'timeout', 'urgency', 'foreground', 'background'
# and 'format'.
# Shell-like globbing will get expanded.
#
# SCRIPTING
# you can specify a script that gets run when the rule matches by setting
# the 'script' option.
# The script will be called as follows:
# script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: if you don't want a notification to be displayed, set the format to ""
# NOTE: It might be helpful to run dunst -print in a terminal in order to find
# fitting options for rules.

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
## This notification will not be displayed
#    summary = "foobar"
#    format = ""

[signed_on]
    appname = Pidgin
    summary = "*signed on*"
    urgency = low

[signed_off]
    appname = Pidgin
    summary = *signed off*
    urgency = low

[says]
    appname = Pidgin
    summary = *says*
    urgency = critical
    format  = "%s "%b""

[music]
    appname = Amarok
    summary = "Now playing"
    urgency = low

#[twitter]
#    appname = Pidgin
#    summary = *twitter.com*
#    urgency = normal
#

# [*]
